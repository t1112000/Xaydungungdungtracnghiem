#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAn_XDUDTN._Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbQuanlythitracnghiem")]
	public partial class dbquanlythitracnghiemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCauHoi(CauHoi instance);
    partial void UpdateCauHoi(CauHoi instance);
    partial void DeleteCauHoi(CauHoi instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertDanhSachPhongThi(DanhSachPhongThi instance);
    partial void UpdateDanhSachPhongThi(DanhSachPhongThi instance);
    partial void DeleteDanhSachPhongThi(DanhSachPhongThi instance);
    partial void InsertDeThi(DeThi instance);
    partial void UpdateDeThi(DeThi instance);
    partial void DeleteDeThi(DeThi instance);
    partial void InsertDethiVaCauhoi(DethiVaCauhoi instance);
    partial void UpdateDethiVaCauhoi(DethiVaCauhoi instance);
    partial void DeleteDethiVaCauhoi(DethiVaCauhoi instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertKetQua(KetQua instance);
    partial void UpdateKetQua(KetQua instance);
    partial void DeleteKetQua(KetQua instance);
    partial void InsertKhoa(Khoa instance);
    partial void UpdateKhoa(Khoa instance);
    partial void DeleteKhoa(Khoa instance);
    partial void InsertLop(Lop instance);
    partial void UpdateLop(Lop instance);
    partial void DeleteLop(Lop instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertPhongThi(PhongThi instance);
    partial void UpdatePhongThi(PhongThi instance);
    partial void DeletePhongThi(PhongThi instance);
    partial void InsertPhongthiVaDethi(PhongthiVaDethi instance);
    partial void UpdatePhongthiVaDethi(PhongthiVaDethi instance);
    partial void DeletePhongthiVaDethi(PhongthiVaDethi instance);
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    #endregion
		
		public dbquanlythitracnghiemDataContext() : 
				base(global::DoAn_XDUDTN.Properties.Settings.Default.dbQuanlythitracnghiemConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbquanlythitracnghiemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbquanlythitracnghiemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbquanlythitracnghiemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbquanlythitracnghiemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CauHoi> CauHois
		{
			get
			{
				return this.GetTable<CauHoi>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<DanhSachPhongThi> DanhSachPhongThis
		{
			get
			{
				return this.GetTable<DanhSachPhongThi>();
			}
		}
		
		public System.Data.Linq.Table<DeThi> DeThis
		{
			get
			{
				return this.GetTable<DeThi>();
			}
		}
		
		public System.Data.Linq.Table<DethiVaCauhoi> DethiVaCauhois
		{
			get
			{
				return this.GetTable<DethiVaCauhoi>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<KetQua> KetQuas
		{
			get
			{
				return this.GetTable<KetQua>();
			}
		}
		
		public System.Data.Linq.Table<Khoa> Khoas
		{
			get
			{
				return this.GetTable<Khoa>();
			}
		}
		
		public System.Data.Linq.Table<Lop> Lops
		{
			get
			{
				return this.GetTable<Lop>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<PhongThi> PhongThis
		{
			get
			{
				return this.GetTable<PhongThi>();
			}
		}
		
		public System.Data.Linq.Table<PhongthiVaDethi> PhongthiVaDethis
		{
			get
			{
				return this.GetTable<PhongthiVaDethi>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoi")]
	public partial class CauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDch;
		
		private System.Nullable<int> _Monhoc;
		
		private string _Noidung;
		
		private string _Dapandung;
		
		private string _Dapansai;
		
		private EntitySet<DethiVaCauhoi> _DethiVaCauhois;
		
		private EntityRef<MonHoc> _MonHoc1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDchChanging(int value);
    partial void OnIDchChanged();
    partial void OnMonhocChanging(System.Nullable<int> value);
    partial void OnMonhocChanged();
    partial void OnNoidungChanging(string value);
    partial void OnNoidungChanged();
    partial void OnDapandungChanging(string value);
    partial void OnDapandungChanged();
    partial void OnDapansaiChanging(string value);
    partial void OnDapansaiChanged();
    #endregion
		
		public CauHoi()
		{
			this._DethiVaCauhois = new EntitySet<DethiVaCauhoi>(new Action<DethiVaCauhoi>(this.attach_DethiVaCauhois), new Action<DethiVaCauhoi>(this.detach_DethiVaCauhois));
			this._MonHoc1 = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDch", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDch
		{
			get
			{
				return this._IDch;
			}
			set
			{
				if ((this._IDch != value))
				{
					this.OnIDchChanging(value);
					this.SendPropertyChanging();
					this._IDch = value;
					this.SendPropertyChanged("IDch");
					this.OnIDchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monhoc", DbType="Int")]
		public System.Nullable<int> Monhoc
		{
			get
			{
				return this._Monhoc;
			}
			set
			{
				if ((this._Monhoc != value))
				{
					if (this._MonHoc1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonhocChanging(value);
					this.SendPropertyChanging();
					this._Monhoc = value;
					this.SendPropertyChanged("Monhoc");
					this.OnMonhocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Noidung", DbType="NVarChar(MAX)")]
		public string Noidung
		{
			get
			{
				return this._Noidung;
			}
			set
			{
				if ((this._Noidung != value))
				{
					this.OnNoidungChanging(value);
					this.SendPropertyChanging();
					this._Noidung = value;
					this.SendPropertyChanged("Noidung");
					this.OnNoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dapandung", DbType="NVarChar(MAX)")]
		public string Dapandung
		{
			get
			{
				return this._Dapandung;
			}
			set
			{
				if ((this._Dapandung != value))
				{
					this.OnDapandungChanging(value);
					this.SendPropertyChanging();
					this._Dapandung = value;
					this.SendPropertyChanged("Dapandung");
					this.OnDapandungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dapansai", DbType="NVarChar(MAX)")]
		public string Dapansai
		{
			get
			{
				return this._Dapansai;
			}
			set
			{
				if ((this._Dapansai != value))
				{
					this.OnDapansaiChanging(value);
					this.SendPropertyChanging();
					this._Dapansai = value;
					this.SendPropertyChanged("Dapansai");
					this.OnDapansaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_DethiVaCauhoi", Storage="_DethiVaCauhois", ThisKey="IDch", OtherKey="Cauhoi")]
		public EntitySet<DethiVaCauhoi> DethiVaCauhois
		{
			get
			{
				return this._DethiVaCauhois;
			}
			set
			{
				this._DethiVaCauhois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_CauHoi", Storage="_MonHoc1", ThisKey="Monhoc", OtherKey="IDmh", IsForeignKey=true)]
		public MonHoc MonHoc1
		{
			get
			{
				return this._MonHoc1.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc1.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc1.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._MonHoc1.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._Monhoc = value.IDmh;
					}
					else
					{
						this._Monhoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("MonHoc1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DethiVaCauhois(DethiVaCauhoi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi1 = this;
		}
		
		private void detach_DethiVaCauhois(DethiVaCauhoi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<bool> _Tinhtrang;
		
		private EntitySet<DanhSachPhongThi> _DanhSachPhongThis;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
		private EntitySet<KetQua> _KetQuas;
		
		private EntitySet<SinhVien> _SinhViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTinhtrangChanging(System.Nullable<bool> value);
    partial void OnTinhtrangChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._DanhSachPhongThis = new EntitySet<DanhSachPhongThi>(new Action<DanhSachPhongThi>(this.attach_DanhSachPhongThis), new Action<DanhSachPhongThi>(this.detach_DanhSachPhongThis));
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			this._KetQuas = new EntitySet<KetQua>(new Action<KetQua>(this.attach_KetQuas), new Action<KetQua>(this.detach_KetQuas));
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tinhtrang", DbType="Bit")]
		public System.Nullable<bool> Tinhtrang
		{
			get
			{
				return this._Tinhtrang;
			}
			set
			{
				if ((this._Tinhtrang != value))
				{
					this.OnTinhtrangChanging(value);
					this.SendPropertyChanging();
					this._Tinhtrang = value;
					this.SendPropertyChanged("Tinhtrang");
					this.OnTinhtrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DanhSachPhongThi", Storage="_DanhSachPhongThis", ThisKey="Username", OtherKey="Thisinh")]
		public EntitySet<DanhSachPhongThi> DanhSachPhongThis
		{
			get
			{
				return this._DanhSachPhongThis;
			}
			set
			{
				this._DanhSachPhongThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_GiaoVien", Storage="_GiaoViens", ThisKey="Username", OtherKey="IDdn")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_KetQua", Storage="_KetQuas", ThisKey="Username", OtherKey="Thisinh")]
		public EntitySet<KetQua> KetQuas
		{
			get
			{
				return this._KetQuas;
			}
			set
			{
				this._KetQuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_SinhVien", Storage="_SinhViens", ThisKey="Username", OtherKey="IDdn")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachPhongThis(DanhSachPhongThi entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_DanhSachPhongThis(DanhSachPhongThi entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhSachPhongThi")]
	public partial class DanhSachPhongThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Phongthi;
		
		private string _Thisinh;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
		private EntityRef<PhongThi> _PhongThi1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhongthiChanging(int value);
    partial void OnPhongthiChanged();
    partial void OnThisinhChanging(string value);
    partial void OnThisinhChanged();
    #endregion
		
		public DanhSachPhongThi()
		{
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			this._PhongThi1 = default(EntityRef<PhongThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phongthi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Phongthi
		{
			get
			{
				return this._Phongthi;
			}
			set
			{
				if ((this._Phongthi != value))
				{
					if (this._PhongThi1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongthiChanging(value);
					this.SendPropertyChanging();
					this._Phongthi = value;
					this.SendPropertyChanged("Phongthi");
					this.OnPhongthiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thisinh", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Thisinh
		{
			get
			{
				return this._Thisinh;
			}
			set
			{
				if ((this._Thisinh != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThisinhChanging(value);
					this.SendPropertyChanging();
					this._Thisinh = value;
					this.SendPropertyChanged("Thisinh");
					this.OnThisinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DanhSachPhongThi", Storage="_TaiKhoan", ThisKey="Thisinh", OtherKey="Username", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.DanhSachPhongThis.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.DanhSachPhongThis.Add(this);
						this._Thisinh = value.Username;
					}
					else
					{
						this._Thisinh = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongThi_DanhSachPhongThi", Storage="_PhongThi1", ThisKey="Phongthi", OtherKey="IDpt", IsForeignKey=true)]
		public PhongThi PhongThi1
		{
			get
			{
				return this._PhongThi1.Entity;
			}
			set
			{
				PhongThi previousValue = this._PhongThi1.Entity;
				if (((previousValue != value) 
							|| (this._PhongThi1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongThi1.Entity = null;
						previousValue.DanhSachPhongThis.Remove(this);
					}
					this._PhongThi1.Entity = value;
					if ((value != null))
					{
						value.DanhSachPhongThis.Add(this);
						this._Phongthi = value.IDpt;
					}
					else
					{
						this._Phongthi = default(int);
					}
					this.SendPropertyChanged("PhongThi1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeThi")]
	public partial class DeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDdt;
		
		private System.Nullable<int> _Monhoc;
		
		private EntitySet<DethiVaCauhoi> _DethiVaCauhois;
		
		private EntitySet<PhongthiVaDethi> _PhongthiVaDethis;
		
		private EntityRef<MonHoc> _MonHoc1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDdtChanging(int value);
    partial void OnIDdtChanged();
    partial void OnMonhocChanging(System.Nullable<int> value);
    partial void OnMonhocChanged();
    #endregion
		
		public DeThi()
		{
			this._DethiVaCauhois = new EntitySet<DethiVaCauhoi>(new Action<DethiVaCauhoi>(this.attach_DethiVaCauhois), new Action<DethiVaCauhoi>(this.detach_DethiVaCauhois));
			this._PhongthiVaDethis = new EntitySet<PhongthiVaDethi>(new Action<PhongthiVaDethi>(this.attach_PhongthiVaDethis), new Action<PhongthiVaDethi>(this.detach_PhongthiVaDethis));
			this._MonHoc1 = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDdt", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDdt
		{
			get
			{
				return this._IDdt;
			}
			set
			{
				if ((this._IDdt != value))
				{
					this.OnIDdtChanging(value);
					this.SendPropertyChanging();
					this._IDdt = value;
					this.SendPropertyChanged("IDdt");
					this.OnIDdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monhoc", DbType="Int")]
		public System.Nullable<int> Monhoc
		{
			get
			{
				return this._Monhoc;
			}
			set
			{
				if ((this._Monhoc != value))
				{
					if (this._MonHoc1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonhocChanging(value);
					this.SendPropertyChanging();
					this._Monhoc = value;
					this.SendPropertyChanged("Monhoc");
					this.OnMonhocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_DethiVaCauhoi", Storage="_DethiVaCauhois", ThisKey="IDdt", OtherKey="Dethi")]
		public EntitySet<DethiVaCauhoi> DethiVaCauhois
		{
			get
			{
				return this._DethiVaCauhois;
			}
			set
			{
				this._DethiVaCauhois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_PhongthiVaDethi", Storage="_PhongthiVaDethis", ThisKey="IDdt", OtherKey="Dethi")]
		public EntitySet<PhongthiVaDethi> PhongthiVaDethis
		{
			get
			{
				return this._PhongthiVaDethis;
			}
			set
			{
				this._PhongthiVaDethis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DeThi", Storage="_MonHoc1", ThisKey="Monhoc", OtherKey="IDmh", IsForeignKey=true)]
		public MonHoc MonHoc1
		{
			get
			{
				return this._MonHoc1.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc1.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc1.Entity = null;
						previousValue.DeThis.Remove(this);
					}
					this._MonHoc1.Entity = value;
					if ((value != null))
					{
						value.DeThis.Add(this);
						this._Monhoc = value.IDmh;
					}
					else
					{
						this._Monhoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("MonHoc1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DethiVaCauhois(DethiVaCauhoi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi1 = this;
		}
		
		private void detach_DethiVaCauhois(DethiVaCauhoi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi1 = null;
		}
		
		private void attach_PhongthiVaDethis(PhongthiVaDethi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi1 = this;
		}
		
		private void detach_PhongthiVaDethis(PhongthiVaDethi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DethiVaCauhoi")]
	public partial class DethiVaCauhoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Dethi;
		
		private int _Cauhoi;
		
		private EntityRef<CauHoi> _CauHoi1;
		
		private EntityRef<DeThi> _DeThi1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDethiChanging(int value);
    partial void OnDethiChanged();
    partial void OnCauhoiChanging(int value);
    partial void OnCauhoiChanged();
    #endregion
		
		public DethiVaCauhoi()
		{
			this._CauHoi1 = default(EntityRef<CauHoi>);
			this._DeThi1 = default(EntityRef<DeThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dethi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Dethi
		{
			get
			{
				return this._Dethi;
			}
			set
			{
				if ((this._Dethi != value))
				{
					if (this._DeThi1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDethiChanging(value);
					this.SendPropertyChanging();
					this._Dethi = value;
					this.SendPropertyChanged("Dethi");
					this.OnDethiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cauhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Cauhoi
		{
			get
			{
				return this._Cauhoi;
			}
			set
			{
				if ((this._Cauhoi != value))
				{
					if (this._CauHoi1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCauhoiChanging(value);
					this.SendPropertyChanging();
					this._Cauhoi = value;
					this.SendPropertyChanged("Cauhoi");
					this.OnCauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_DethiVaCauhoi", Storage="_CauHoi1", ThisKey="Cauhoi", OtherKey="IDch", IsForeignKey=true)]
		public CauHoi CauHoi1
		{
			get
			{
				return this._CauHoi1.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi1.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi1.Entity = null;
						previousValue.DethiVaCauhois.Remove(this);
					}
					this._CauHoi1.Entity = value;
					if ((value != null))
					{
						value.DethiVaCauhois.Add(this);
						this._Cauhoi = value.IDch;
					}
					else
					{
						this._Cauhoi = default(int);
					}
					this.SendPropertyChanged("CauHoi1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_DethiVaCauhoi", Storage="_DeThi1", ThisKey="Dethi", OtherKey="IDdt", IsForeignKey=true)]
		public DeThi DeThi1
		{
			get
			{
				return this._DeThi1.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi1.Entity;
				if (((previousValue != value) 
							|| (this._DeThi1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi1.Entity = null;
						previousValue.DethiVaCauhois.Remove(this);
					}
					this._DeThi1.Entity = value;
					if ((value != null))
					{
						value.DethiVaCauhois.Add(this);
						this._Dethi = value.IDdt;
					}
					else
					{
						this._Dethi = default(int);
					}
					this.SendPropertyChanged("DeThi1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDgv;
		
		private string _Ten;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private System.Nullable<bool> _Gioitinh;
		
		private string _Khoa;
		
		private string _IDdn;
		
		private System.Nullable<bool> _Trangthai;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
		private EntityRef<Khoa> _Khoa1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDgvChanging(int value);
    partial void OnIDgvChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    partial void OnGioitinhChanging(System.Nullable<bool> value);
    partial void OnGioitinhChanged();
    partial void OnKhoaChanging(string value);
    partial void OnKhoaChanged();
    partial void OnIDdnChanging(string value);
    partial void OnIDdnChanged();
    partial void OnTrangthaiChanging(System.Nullable<bool> value);
    partial void OnTrangthaiChanged();
    #endregion
		
		public GiaoVien()
		{
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			this._Khoa1 = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDgv", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDgv
		{
			get
			{
				return this._IDgv;
			}
			set
			{
				if ((this._IDgv != value))
				{
					this.OnIDgvChanging(value);
					this.SendPropertyChanging();
					this._IDgv = value;
					this.SendPropertyChanged("IDgv");
					this.OnIDgvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(MAX)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gioitinh", DbType="Bit")]
		public System.Nullable<bool> Gioitinh
		{
			get
			{
				return this._Gioitinh;
			}
			set
			{
				if ((this._Gioitinh != value))
				{
					this.OnGioitinhChanging(value);
					this.SendPropertyChanging();
					this._Gioitinh = value;
					this.SendPropertyChanged("Gioitinh");
					this.OnGioitinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoa", DbType="VarChar(4)")]
		public string Khoa
		{
			get
			{
				return this._Khoa;
			}
			set
			{
				if ((this._Khoa != value))
				{
					if (this._Khoa1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoaChanging(value);
					this.SendPropertyChanging();
					this._Khoa = value;
					this.SendPropertyChanged("Khoa");
					this.OnKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDdn", DbType="VarChar(10)")]
		public string IDdn
		{
			get
			{
				return this._IDdn;
			}
			set
			{
				if ((this._IDdn != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDdnChanging(value);
					this.SendPropertyChanging();
					this._IDdn = value;
					this.SendPropertyChanged("IDdn");
					this.OnIDdnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trangthai", DbType="Bit")]
		public System.Nullable<bool> Trangthai
		{
			get
			{
				return this._Trangthai;
			}
			set
			{
				if ((this._Trangthai != value))
				{
					this.OnTrangthaiChanging(value);
					this.SendPropertyChanging();
					this._Trangthai = value;
					this.SendPropertyChanged("Trangthai");
					this.OnTrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_GiaoVien", Storage="_TaiKhoan", ThisKey="IDdn", OtherKey="Username", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._IDdn = value.Username;
					}
					else
					{
						this._IDdn = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_GiaoVien", Storage="_Khoa1", ThisKey="Khoa", OtherKey="IDkhoa", IsForeignKey=true)]
		public Khoa Khoa1
		{
			get
			{
				return this._Khoa1.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa1.Entity;
				if (((previousValue != value) 
							|| (this._Khoa1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa1.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._Khoa1.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._Khoa = value.IDkhoa;
					}
					else
					{
						this._Khoa = default(string);
					}
					this.SendPropertyChanged("Khoa1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KetQua")]
	public partial class KetQua : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Thisinh;
		
		private int _Monthi;
		
		private System.Nullable<double> _Ketqua1;
		
		private string _Diemchu;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThisinhChanging(string value);
    partial void OnThisinhChanged();
    partial void OnMonthiChanging(int value);
    partial void OnMonthiChanged();
    partial void OnKetqua1Changing(System.Nullable<double> value);
    partial void OnKetqua1Changed();
    partial void OnDiemchuChanging(string value);
    partial void OnDiemchuChanged();
    #endregion
		
		public KetQua()
		{
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thisinh", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Thisinh
		{
			get
			{
				return this._Thisinh;
			}
			set
			{
				if ((this._Thisinh != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThisinhChanging(value);
					this.SendPropertyChanging();
					this._Thisinh = value;
					this.SendPropertyChanged("Thisinh");
					this.OnThisinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monthi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Monthi
		{
			get
			{
				return this._Monthi;
			}
			set
			{
				if ((this._Monthi != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonthiChanging(value);
					this.SendPropertyChanging();
					this._Monthi = value;
					this.SendPropertyChanged("Monthi");
					this.OnMonthiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Ketqua", Storage="_Ketqua1", DbType="Float")]
		public System.Nullable<double> Ketqua1
		{
			get
			{
				return this._Ketqua1;
			}
			set
			{
				if ((this._Ketqua1 != value))
				{
					this.OnKetqua1Changing(value);
					this.SendPropertyChanging();
					this._Ketqua1 = value;
					this.SendPropertyChanged("Ketqua1");
					this.OnKetqua1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diemchu", DbType="Char(2)")]
		public string Diemchu
		{
			get
			{
				return this._Diemchu;
			}
			set
			{
				if ((this._Diemchu != value))
				{
					this.OnDiemchuChanging(value);
					this.SendPropertyChanging();
					this._Diemchu = value;
					this.SendPropertyChanged("Diemchu");
					this.OnDiemchuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_KetQua", Storage="_TaiKhoan", ThisKey="Thisinh", OtherKey="Username", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.KetQuas.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.KetQuas.Add(this);
						this._Thisinh = value.Username;
					}
					else
					{
						this._Thisinh = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_KetQua", Storage="_MonHoc", ThisKey="Monthi", OtherKey="IDmh", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.KetQuas.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.KetQuas.Add(this);
						this._Monthi = value.IDmh;
					}
					else
					{
						this._Monthi = default(int);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoa")]
	public partial class Khoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDkhoa;
		
		private string _Tenkhoa;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
		private EntitySet<Lop> _Lops;
		
		private EntitySet<SinhVien> _SinhViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDkhoaChanging(string value);
    partial void OnIDkhoaChanged();
    partial void OnTenkhoaChanging(string value);
    partial void OnTenkhoaChanged();
    #endregion
		
		public Khoa()
		{
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDkhoa", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDkhoa
		{
			get
			{
				return this._IDkhoa;
			}
			set
			{
				if ((this._IDkhoa != value))
				{
					this.OnIDkhoaChanging(value);
					this.SendPropertyChanging();
					this._IDkhoa = value;
					this.SendPropertyChanged("IDkhoa");
					this.OnIDkhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenkhoa", DbType="NVarChar(MAX)")]
		public string Tenkhoa
		{
			get
			{
				return this._Tenkhoa;
			}
			set
			{
				if ((this._Tenkhoa != value))
				{
					this.OnTenkhoaChanging(value);
					this.SendPropertyChanging();
					this._Tenkhoa = value;
					this.SendPropertyChanged("Tenkhoa");
					this.OnTenkhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_GiaoVien", Storage="_GiaoViens", ThisKey="IDkhoa", OtherKey="Khoa")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Lop", Storage="_Lops", ThisKey="IDkhoa", OtherKey="Khoa")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_SinhVien", Storage="_SinhViens", ThisKey="IDkhoa", OtherKey="Khoa")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.Khoa1 = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.Khoa1 = null;
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoa1 = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoa1 = null;
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.Khoa1 = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.Khoa1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lop")]
	public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDlop;
		
		private string _Khoa;
		
		private EntitySet<SinhVien> _SinhViens;
		
		private EntityRef<Khoa> _Khoa1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDlopChanging(string value);
    partial void OnIDlopChanged();
    partial void OnKhoaChanging(string value);
    partial void OnKhoaChanged();
    #endregion
		
		public Lop()
		{
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			this._Khoa1 = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDlop", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDlop
		{
			get
			{
				return this._IDlop;
			}
			set
			{
				if ((this._IDlop != value))
				{
					this.OnIDlopChanging(value);
					this.SendPropertyChanging();
					this._IDlop = value;
					this.SendPropertyChanged("IDlop");
					this.OnIDlopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoa", DbType="VarChar(4)")]
		public string Khoa
		{
			get
			{
				return this._Khoa;
			}
			set
			{
				if ((this._Khoa != value))
				{
					if (this._Khoa1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoaChanging(value);
					this.SendPropertyChanging();
					this._Khoa = value;
					this.SendPropertyChanged("Khoa");
					this.OnKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_SinhVien", Storage="_SinhViens", ThisKey="IDlop", OtherKey="Lop")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Lop", Storage="_Khoa1", ThisKey="Khoa", OtherKey="IDkhoa", IsForeignKey=true)]
		public Khoa Khoa1
		{
			get
			{
				return this._Khoa1.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa1.Entity;
				if (((previousValue != value) 
							|| (this._Khoa1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa1.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._Khoa1.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._Khoa = value.IDkhoa;
					}
					else
					{
						this._Khoa = default(string);
					}
					this.SendPropertyChanged("Khoa1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.Lop1 = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.Lop1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDmh;
		
		private string _Ten;
		
		private EntitySet<CauHoi> _CauHois;
		
		private EntitySet<DeThi> _DeThis;
		
		private EntitySet<KetQua> _KetQuas;
		
		private EntitySet<PhongThi> _PhongThis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDmhChanging(int value);
    partial void OnIDmhChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    #endregion
		
		public MonHoc()
		{
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			this._DeThis = new EntitySet<DeThi>(new Action<DeThi>(this.attach_DeThis), new Action<DeThi>(this.detach_DeThis));
			this._KetQuas = new EntitySet<KetQua>(new Action<KetQua>(this.attach_KetQuas), new Action<KetQua>(this.detach_KetQuas));
			this._PhongThis = new EntitySet<PhongThi>(new Action<PhongThi>(this.attach_PhongThis), new Action<PhongThi>(this.detach_PhongThis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDmh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDmh
		{
			get
			{
				return this._IDmh;
			}
			set
			{
				if ((this._IDmh != value))
				{
					this.OnIDmhChanging(value);
					this.SendPropertyChanging();
					this._IDmh = value;
					this.SendPropertyChanged("IDmh");
					this.OnIDmhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(MAX)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_CauHoi", Storage="_CauHois", ThisKey="IDmh", OtherKey="Monhoc")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DeThi", Storage="_DeThis", ThisKey="IDmh", OtherKey="Monhoc")]
		public EntitySet<DeThi> DeThis
		{
			get
			{
				return this._DeThis;
			}
			set
			{
				this._DeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_KetQua", Storage="_KetQuas", ThisKey="IDmh", OtherKey="Monthi")]
		public EntitySet<KetQua> KetQuas
		{
			get
			{
				return this._KetQuas;
			}
			set
			{
				this._KetQuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_PhongThi", Storage="_PhongThis", ThisKey="IDmh", OtherKey="Monthi")]
		public EntitySet<PhongThi> PhongThis
		{
			get
			{
				return this._PhongThis;
			}
			set
			{
				this._PhongThis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc1 = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc1 = null;
		}
		
		private void attach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc1 = this;
		}
		
		private void detach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc1 = null;
		}
		
		private void attach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_PhongThis(PhongThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_PhongThis(PhongThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongThi")]
	public partial class PhongThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDpt;
		
		private string _Ten;
		
		private string _Phong;
		
		private System.Nullable<System.DateTime> _Thoigianthi;
		
		private System.Nullable<int> _Thoigianlam;
		
		private System.Nullable<int> _Monthi;
		
		private EntitySet<DanhSachPhongThi> _DanhSachPhongThis;
		
		private EntitySet<PhongthiVaDethi> _PhongthiVaDethis;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDptChanging(int value);
    partial void OnIDptChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnPhongChanging(string value);
    partial void OnPhongChanged();
    partial void OnThoigianthiChanging(System.Nullable<System.DateTime> value);
    partial void OnThoigianthiChanged();
    partial void OnThoigianlamChanging(System.Nullable<int> value);
    partial void OnThoigianlamChanged();
    partial void OnMonthiChanging(System.Nullable<int> value);
    partial void OnMonthiChanged();
    #endregion
		
		public PhongThi()
		{
			this._DanhSachPhongThis = new EntitySet<DanhSachPhongThi>(new Action<DanhSachPhongThi>(this.attach_DanhSachPhongThis), new Action<DanhSachPhongThi>(this.detach_DanhSachPhongThis));
			this._PhongthiVaDethis = new EntitySet<PhongthiVaDethi>(new Action<PhongthiVaDethi>(this.attach_PhongthiVaDethis), new Action<PhongthiVaDethi>(this.detach_PhongthiVaDethis));
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDpt", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDpt
		{
			get
			{
				return this._IDpt;
			}
			set
			{
				if ((this._IDpt != value))
				{
					this.OnIDptChanging(value);
					this.SendPropertyChanging();
					this._IDpt = value;
					this.SendPropertyChanged("IDpt");
					this.OnIDptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(MAX)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phong", DbType="VarChar(4)")]
		public string Phong
		{
			get
			{
				return this._Phong;
			}
			set
			{
				if ((this._Phong != value))
				{
					this.OnPhongChanging(value);
					this.SendPropertyChanging();
					this._Phong = value;
					this.SendPropertyChanged("Phong");
					this.OnPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thoigianthi", DbType="DateTime")]
		public System.Nullable<System.DateTime> Thoigianthi
		{
			get
			{
				return this._Thoigianthi;
			}
			set
			{
				if ((this._Thoigianthi != value))
				{
					this.OnThoigianthiChanging(value);
					this.SendPropertyChanging();
					this._Thoigianthi = value;
					this.SendPropertyChanged("Thoigianthi");
					this.OnThoigianthiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thoigianlam", DbType="Int")]
		public System.Nullable<int> Thoigianlam
		{
			get
			{
				return this._Thoigianlam;
			}
			set
			{
				if ((this._Thoigianlam != value))
				{
					this.OnThoigianlamChanging(value);
					this.SendPropertyChanging();
					this._Thoigianlam = value;
					this.SendPropertyChanged("Thoigianlam");
					this.OnThoigianlamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monthi", DbType="Int")]
		public System.Nullable<int> Monthi
		{
			get
			{
				return this._Monthi;
			}
			set
			{
				if ((this._Monthi != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonthiChanging(value);
					this.SendPropertyChanging();
					this._Monthi = value;
					this.SendPropertyChanged("Monthi");
					this.OnMonthiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongThi_DanhSachPhongThi", Storage="_DanhSachPhongThis", ThisKey="IDpt", OtherKey="Phongthi")]
		public EntitySet<DanhSachPhongThi> DanhSachPhongThis
		{
			get
			{
				return this._DanhSachPhongThis;
			}
			set
			{
				this._DanhSachPhongThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongThi_PhongthiVaDethi", Storage="_PhongthiVaDethis", ThisKey="IDpt", OtherKey="Phongthi")]
		public EntitySet<PhongthiVaDethi> PhongthiVaDethis
		{
			get
			{
				return this._PhongthiVaDethis;
			}
			set
			{
				this._PhongthiVaDethis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_PhongThi", Storage="_MonHoc", ThisKey="Monthi", OtherKey="IDmh", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.PhongThis.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.PhongThis.Add(this);
						this._Monthi = value.IDmh;
					}
					else
					{
						this._Monthi = default(Nullable<int>);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachPhongThis(DanhSachPhongThi entity)
		{
			this.SendPropertyChanging();
			entity.PhongThi1 = this;
		}
		
		private void detach_DanhSachPhongThis(DanhSachPhongThi entity)
		{
			this.SendPropertyChanging();
			entity.PhongThi1 = null;
		}
		
		private void attach_PhongthiVaDethis(PhongthiVaDethi entity)
		{
			this.SendPropertyChanging();
			entity.PhongThi1 = this;
		}
		
		private void detach_PhongthiVaDethis(PhongthiVaDethi entity)
		{
			this.SendPropertyChanging();
			entity.PhongThi1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongthiVaDethi")]
	public partial class PhongthiVaDethi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Phongthi;
		
		private int _Dethi;
		
		private EntityRef<DeThi> _DeThi1;
		
		private EntityRef<PhongThi> _PhongThi1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhongthiChanging(int value);
    partial void OnPhongthiChanged();
    partial void OnDethiChanging(int value);
    partial void OnDethiChanged();
    #endregion
		
		public PhongthiVaDethi()
		{
			this._DeThi1 = default(EntityRef<DeThi>);
			this._PhongThi1 = default(EntityRef<PhongThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phongthi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Phongthi
		{
			get
			{
				return this._Phongthi;
			}
			set
			{
				if ((this._Phongthi != value))
				{
					if (this._PhongThi1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongthiChanging(value);
					this.SendPropertyChanging();
					this._Phongthi = value;
					this.SendPropertyChanged("Phongthi");
					this.OnPhongthiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dethi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Dethi
		{
			get
			{
				return this._Dethi;
			}
			set
			{
				if ((this._Dethi != value))
				{
					if (this._DeThi1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDethiChanging(value);
					this.SendPropertyChanging();
					this._Dethi = value;
					this.SendPropertyChanged("Dethi");
					this.OnDethiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_PhongthiVaDethi", Storage="_DeThi1", ThisKey="Dethi", OtherKey="IDdt", IsForeignKey=true)]
		public DeThi DeThi1
		{
			get
			{
				return this._DeThi1.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi1.Entity;
				if (((previousValue != value) 
							|| (this._DeThi1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi1.Entity = null;
						previousValue.PhongthiVaDethis.Remove(this);
					}
					this._DeThi1.Entity = value;
					if ((value != null))
					{
						value.PhongthiVaDethis.Add(this);
						this._Dethi = value.IDdt;
					}
					else
					{
						this._Dethi = default(int);
					}
					this.SendPropertyChanged("DeThi1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongThi_PhongthiVaDethi", Storage="_PhongThi1", ThisKey="Phongthi", OtherKey="IDpt", IsForeignKey=true)]
		public PhongThi PhongThi1
		{
			get
			{
				return this._PhongThi1.Entity;
			}
			set
			{
				PhongThi previousValue = this._PhongThi1.Entity;
				if (((previousValue != value) 
							|| (this._PhongThi1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongThi1.Entity = null;
						previousValue.PhongthiVaDethis.Remove(this);
					}
					this._PhongThi1.Entity = value;
					if ((value != null))
					{
						value.PhongthiVaDethis.Add(this);
						this._Phongthi = value.IDpt;
					}
					else
					{
						this._Phongthi = default(int);
					}
					this.SendPropertyChanged("PhongThi1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDsv;
		
		private string _Ten;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private System.Nullable<bool> _Gioitinh;
		
		private string _Lop;
		
		private string _Khoa;
		
		private string _IDdn;
		
		private System.Nullable<bool> _Trangthai;
		
		private EntityRef<Khoa> _Khoa1;
		
		private EntityRef<Lop> _Lop1;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDsvChanging(int value);
    partial void OnIDsvChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    partial void OnGioitinhChanging(System.Nullable<bool> value);
    partial void OnGioitinhChanged();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    partial void OnKhoaChanging(string value);
    partial void OnKhoaChanged();
    partial void OnIDdnChanging(string value);
    partial void OnIDdnChanged();
    partial void OnTrangthaiChanging(System.Nullable<bool> value);
    partial void OnTrangthaiChanged();
    #endregion
		
		public SinhVien()
		{
			this._Khoa1 = default(EntityRef<Khoa>);
			this._Lop1 = default(EntityRef<Lop>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDsv", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDsv
		{
			get
			{
				return this._IDsv;
			}
			set
			{
				if ((this._IDsv != value))
				{
					this.OnIDsvChanging(value);
					this.SendPropertyChanging();
					this._IDsv = value;
					this.SendPropertyChanged("IDsv");
					this.OnIDsvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(MAX)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gioitinh", DbType="Bit")]
		public System.Nullable<bool> Gioitinh
		{
			get
			{
				return this._Gioitinh;
			}
			set
			{
				if ((this._Gioitinh != value))
				{
					this.OnGioitinhChanging(value);
					this.SendPropertyChanging();
					this._Gioitinh = value;
					this.SendPropertyChanged("Gioitinh");
					this.OnGioitinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="VarChar(8)")]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					if (this._Lop1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoa", DbType="VarChar(4)")]
		public string Khoa
		{
			get
			{
				return this._Khoa;
			}
			set
			{
				if ((this._Khoa != value))
				{
					if (this._Khoa1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoaChanging(value);
					this.SendPropertyChanging();
					this._Khoa = value;
					this.SendPropertyChanged("Khoa");
					this.OnKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDdn", DbType="VarChar(10)")]
		public string IDdn
		{
			get
			{
				return this._IDdn;
			}
			set
			{
				if ((this._IDdn != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDdnChanging(value);
					this.SendPropertyChanging();
					this._IDdn = value;
					this.SendPropertyChanged("IDdn");
					this.OnIDdnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trangthai", DbType="Bit")]
		public System.Nullable<bool> Trangthai
		{
			get
			{
				return this._Trangthai;
			}
			set
			{
				if ((this._Trangthai != value))
				{
					this.OnTrangthaiChanging(value);
					this.SendPropertyChanging();
					this._Trangthai = value;
					this.SendPropertyChanged("Trangthai");
					this.OnTrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_SinhVien", Storage="_Khoa1", ThisKey="Khoa", OtherKey="IDkhoa", IsForeignKey=true)]
		public Khoa Khoa1
		{
			get
			{
				return this._Khoa1.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa1.Entity;
				if (((previousValue != value) 
							|| (this._Khoa1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa1.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._Khoa1.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._Khoa = value.IDkhoa;
					}
					else
					{
						this._Khoa = default(string);
					}
					this.SendPropertyChanged("Khoa1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_SinhVien", Storage="_Lop1", ThisKey="Lop", OtherKey="IDlop", IsForeignKey=true)]
		public Lop Lop1
		{
			get
			{
				return this._Lop1.Entity;
			}
			set
			{
				Lop previousValue = this._Lop1.Entity;
				if (((previousValue != value) 
							|| (this._Lop1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop1.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._Lop1.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._Lop = value.IDlop;
					}
					else
					{
						this._Lop = default(string);
					}
					this.SendPropertyChanged("Lop1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_SinhVien", Storage="_TaiKhoan", ThisKey="IDdn", OtherKey="Username", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._IDdn = value.Username;
					}
					else
					{
						this._IDdn = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
